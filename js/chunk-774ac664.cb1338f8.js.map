{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/html/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js"],"names":["Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","timePassedSinceLastUsed","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","createData","languageSettings","options","languageId","label","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","diff","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","languageFeatures_Range","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","d","resource","worker","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toHighlighKind","mKind","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","toSymbolKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","DocumentLinkAdapter","provideLinks","findDocumentLinks","links","url","fromFormattingOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","FoldingRangeAdapter","provideFoldingRanges","ranges","toFoldingRangeKind","Comment","Imports","Region","setupMode","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentHighlightProvider","registerLinkProvider","registerFoldingRangeProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"js/chunk-774ac664.cb1338f8.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\n// --- hover ------\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        });\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return {\n                links: items.map(function (item) { return ({\n                    range: toRange(item.range),\n                    url: item.target\n                }); })\n            };\n        });\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n"],"sourceRoot":""}